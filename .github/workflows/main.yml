name: Django CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push Docker images
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: user/app:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Set up environment variables
      run: |
        echo "DJANGO_SECRET_KEY=153077523" >> $GITHUB_ENV
        echo "DJANGO_DEBUG=True" >> $GITHUB_ENV
        echo "DB_ENGINE=django.db.backends.postgresql" >> $GITHUB_ENV
        echo "DB_NAME=mydatabase" >> $GITHUB_ENV
        echo "DB_USER=myuser" >> $GITHUB_ENV
        echo "DB_PASSWORD=153077523" >> $GITHUB_ENV
        echo "DB_HOST=db" >> $GITHUB_ENV
        echo "DB_PORT=5432" >> $GITHUB_ENV
        echo "DJANGO_SETTINGS_MODULE=myproject.settings" >> $GITHUB_ENV

    - name: Build the Docker Compose configuration
      run: docker-compose -f docker-compose.yml build

    - name: Run migrations
      run: docker-compose run web python manage.py migrate

    - name: Run Pytest
      run: docker-compose run web pytest myapp/tests/test.py

    - name: Log in to GitHub Docker Registry
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Tag and Push to GitHub Packages
      run: |
        docker tag user/app:latest docker.pkg.github.com/${{ github.repository }}/myapp:latest
        docker push docker.pkg.github.com/${{ github.repository }}/myapp:latest

    - name: Tear down
      if: always()
      run: docker-compose down
